php -S localhost:8080
composer init
composer update
composer clear-cache
composer dump-autoload

mvcApp/
├── core/    
│   ├── Request.php 
│   ├── Router.php         
│   └── Application.php
├── src/ 
├── vendor/  
│   ├── composer/ 
│   │   ├── autoload_classmap.php 
│   │   ├── autoload_namespaces.php 
│   │   ├── autoload_psr4.php 
│   │   ├── autoload_real.php 
│   │   ├── autoload_static.php         
│   │   ├── ClassLoader.php 
│   │   ├── installed.json 
│   │   ├── installed.php 
│   │   ├── InstalledVersion.php 
│   │   └── LICENSE  
│   └── autoload.php       
├── composer.json     
├── composer.lock
├── composer.phar
└── index.php   

index.php
<?php

require_once __DIR__. '/vendor/autoload.php';
use core\Application;

$app = new Application();

$app->$router->get('/', function(){
    return 'Hello World';
});

$app->$router->get('/contact', function(){
    return 'Contact';
});

$app->run();

Router.php
<?php

namespace core;

class Router
{
    public Request $request;
    protected array $routes = [];

    public function __construct(\core\Request $request)
    {
        $this->request = $request;
    }

    public function get($path, $callback)
    {
        $this->routes['get'][$path]=$callback;
    }
    public function resolve()
    {
        $this->request->getPath();
    }

}

Application.php
<?php

namespace core;
use Request;

class Application
{
    public Router $router;
    public Request $request;
    public function __construct()
    {
        $this->router = new Router();
        $this->request = new Request();
    }

    public function run()
    {
        $this->router->resolve();
    }
}

composer.json
{
    "name": "m2/mvc-app",
    "autoload": {
        "psr-4": {
            "core\\": "core/"
        }
    },
    "authors": [
        {
            "name": "jalknThoth",
            "email": "alejalkndro@gmail.com"
        }
    ],
    
    "require": {}
}

<?php

// autoload.php @generated by Composer

if (PHP_VERSION_ID < 50600) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.'.PHP_EOL;
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, $err);
        } elseif (!headers_sent()) {
            echo $err;
        }
    }
    trigger_error(
        $err,
        E_USER_ERROR
    );
}

require_once __DIR__ . '/composer/autoload_real.php';

return ComposerAutoloaderInite4a3fc453c2509beb475210a813d50e4::getLoader();
